{"ast":null,"code":"import { Validators, FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegistrationComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only latin characters and numbers allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Min length equals to 4 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_5_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Max length equals to 12 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, RegistrationComponent_div_5_div_1_Template, 2, 0, \"div\", 8);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_5_div_2_Template, 2, 0, \"div\", 8);\n    i0.ɵɵtemplate(3, RegistrationComponent_div_5_div_3_Template, 2, 0, \"div\", 8);\n    i0.ɵɵtemplate(4, RegistrationComponent_div_5_div_4_Template, 2, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username == null ? null : ctx_r0.username.errors == null ? null : ctx_r0.username.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username == null ? null : ctx_r0.username.errors == null ? null : ctx_r0.username.errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username == null ? null : ctx_r0.username.errors == null ? null : ctx_r0.username.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username == null ? null : ctx_r0.username.errors == null ? null : ctx_r0.username.errors[\"maxlength\"]);\n  }\n}\nfunction RegistrationComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, RegistrationComponent_div_10_div_1_Template, 2, 0, \"div\", 8);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_10_div_2_Template, 2, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email == null ? null : ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email == null ? null : ctx_r1.email.errors == null ? null : ctx_r1.email.errors[\"email\"]);\n  }\n}\nfunction RegistrationComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, RegistrationComponent_div_15_div_1_Template, 2, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password == null ? null : ctx_r2.password.errors == null ? null : ctx_r2.password.errors[\"required\"]);\n  }\n}\nexport class RegistrationComponent {\n  get username() {\n    return this.registrationForm.get('username');\n  }\n  get email() {\n    return this.registrationForm.get('email');\n  }\n  get password() {\n    return this.registrationForm.get('password');\n  }\n  constructor(authService) {\n    this.authService = authService;\n    this.registrationForm = new FormGroup({\n      username: new FormControl('', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(12), Validators.pattern('^[a-zA-Z0-9]+$')])),\n      email: new FormControl('', Validators.compose([Validators.required, Validators.email])),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  register() {\n    this.authService.register(this.registrationForm.value).subscribe();\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 18,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"formControlName\", \"username\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 1, \"light\", 3, \"disabled\"], [1, \"error-message\"], [4, \"ngIf\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n      i0.ɵɵtext(3, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵtemplate(5, RegistrationComponent_div_5_Template, 5, 4, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\");\n      i0.ɵɵtext(8, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵtemplate(10, RegistrationComponent_div_10_Template, 3, 2, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\");\n      i0.ɵɵtext(13, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 5);\n      i0.ɵɵtemplate(15, RegistrationComponent_div_15_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"button\", 6);\n      i0.ɵɵtext(17, \" Register \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.username == null ? null : ctx.username.invalid) && (ctx.username == null ? null : ctx.username.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.invalid) && (ctx.email == null ? null : ctx.email.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password == null ? null : ctx.password.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.registrationForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"button[_ngcontent-%COMP%] {\\n  margin-bottom: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLyVEMCVBMCVEMCVCMCVEMCVCMSVEMCVCRSVEMSU4NyVEMCVCOCVEMCVCOSUyMCVEMSU4MSVEMSU4MiVEMCVCRSVEMCVCQi8lRDAlOUQlRDAlQkUlRDAlQjIlRDAlQjAlRDElOEYlMjAlRDAlQkYlRDAlQjAlRDAlQkYlRDAlQkElRDAlQjAlMjAoOCkvY2xpZW50L3NyYy9hcHAvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FDQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbn0iLCJidXR0b24ge1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","FormControl","FormGroup","i0","RegistrationComponent","username","registrationForm","get","email","password","constructor","authService","compose","required","minLength","maxLength","pattern","register","value","subscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\auth\\components\\registration\\registration.component.ts","C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\auth\\components\\registration\\registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\n\nimport { AuthService } from '../../auth.service';\nimport { Register } from '../../interfaces/register.interface';\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent {\n    registrationForm = new FormGroup({\n        username: new FormControl('', Validators.compose([\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(12),\n            Validators.pattern('^[a-zA-Z0-9]+$'),\n        ])),\n        email: new FormControl('', Validators.compose([\n            Validators.required,\n            Validators.email,\n        ])),\n        password: new FormControl('', Validators.required)\n    });\n    \n    get username() { return this.registrationForm.get('username'); }\n    get email() { return this.registrationForm.get('email'); }\n    get password() { return this.registrationForm.get('password'); }\n    \n    constructor(private authService: AuthService) { }\n\n    register(): void {\n        this.authService.register(this.registrationForm.value as Register).subscribe();\n    }\n}\n","<form [formGroup]=\"registrationForm\" (ngSubmit)=\"register()\">\n    <div class=\"input-group\">\n        <label>Username: </label>\n        \n        <input\n            type=\"text\"\n            placeholder=\"Username\"\n            formControlName=\"username\">\n\n        <div \n            *ngIf=\"username?.invalid && username?.dirty\"\n            class=\"error-message\">\n\n            <div *ngIf=\"username?.errors?.['required']\">Required</div>\n            <div *ngIf=\"username?.errors?.['pattern']\">Only latin characters and numbers allowed</div>\n            <div *ngIf=\"username?.errors?.['minlength']\">Min length equals to 4 characters</div>\n            <div *ngIf=\"username?.errors?.['maxlength']\">Max length equals to 12 characters</div>\n        </div>\n    </div>\n\n    <div class=\"input-group\">\n        <label>Email: </label>\n       \n        <input\n            type=\"email\"\n            placeholder=\"Email\"\n            formControlName=\"email\">\n\n        <div \n            *ngIf=\"email?.invalid && email?.dirty\"\n            class=\"error-message\">\n\n            <div *ngIf=\"email?.errors?.['required']\">Required</div>\n            <div *ngIf=\"email?.errors?.['email']\">Invalid email</div>\n        </div>\n    </div>\n\n\n    <div class=\"input-group\">\n        <label>Password: </label>\n       \n        <input\n            type=\"password\"\n            placeholder=\"Password\"\n            formControlName=\"password\">\n\n        <div \n            *ngIf=\"password?.invalid && password?.dirty\"\n            class=\"error-message\">\n\n            <div *ngIf=\"password?.errors?.['required']\">Required</div>\n        </div>\n    </div>\n    \n    <button\n        type=\"submit\"\n        class=\"light\"\n        [disabled]=\"registrationForm.invalid\">\n        Register\n    </button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
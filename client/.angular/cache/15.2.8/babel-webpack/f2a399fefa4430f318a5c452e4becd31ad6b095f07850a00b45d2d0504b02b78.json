{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../saving.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateSavingModalComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateSavingModalComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only latin characters and numbers allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateSavingModalComponent_div_9_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Min length equals to 4 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateSavingModalComponent_div_9_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Max length equals to 12 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateSavingModalComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, CreateSavingModalComponent_div_9_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, CreateSavingModalComponent_div_9_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(3, CreateSavingModalComponent_div_9_div_3_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(4, CreateSavingModalComponent_div_9_div_4_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors.pattern);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors.maxlength);\n  }\n}\nfunction CreateSavingModalComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateSavingModalComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only numbers allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateSavingModalComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, CreateSavingModalComponent_div_14_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, CreateSavingModalComponent_div_14_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.amount == null ? null : ctx_r1.amount.errors == null ? null : ctx_r1.amount.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.amount == null ? null : ctx_r1.amount.errors == null ? null : ctx_r1.amount.errors.pattern);\n  }\n}\nfunction CreateSavingModalComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r9 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", type_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r9, \" \");\n  }\n}\nexport class CreateSavingModalComponent {\n  get name() {\n    return this.createSavingForm.get('name');\n  }\n  get amount() {\n    return this.createSavingForm.get('amount');\n  }\n  constructor(savingService) {\n    this.savingService = savingService;\n    this.createdSaving = new EventEmitter();\n    this.close = new EventEmitter();\n    this.createSavingForm = new FormGroup({\n      name: new FormControl('', Validators.compose([Validators.required, Validators.minLength(4), Validators.maxLength(12), Validators.pattern('^[a-zA-Z0-9]+$')])),\n      type: new FormControl('', Validators.compose([Validators.required])),\n      amount: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]+([.]{1}[0-9]{1,2})?$')]))\n    });\n  }\n  create() {\n    this.savingService.create(this.createSavingForm.value).subscribe(saving => {\n      this.createdSaving.emit(saving);\n      this.close.emit();\n    }, err => console.error(err.error.message));\n  }\n  cancel() {\n    this.close.emit();\n  }\n}\nCreateSavingModalComponent.ɵfac = function CreateSavingModalComponent_Factory(t) {\n  return new (t || CreateSavingModalComponent)(i0.ɵɵdirectiveInject(i1.SavingService));\n};\nCreateSavingModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateSavingModalComponent,\n  selectors: [[\"app-create-saving-modal\"]],\n  inputs: {\n    types: \"types\"\n  },\n  outputs: {\n    createdSaving: \"createdSaving\",\n    close: \"close\"\n  },\n  decls: 24,\n  vars: 5,\n  consts: [[1, \"modal\"], [1, \"modal-content\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Amount\", \"formControlName\", \"amount\"], [\"formControlName\", \"type\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"], [1, \"error-message\"], [4, \"ngIf\"], [3, \"value\"]],\n  template: function CreateSavingModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Create saving\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateSavingModalComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.create();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n      i0.ɵɵtext(7, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵtemplate(9, CreateSavingModalComponent_div_9_Template, 5, 4, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\");\n      i0.ɵɵtext(12, \"Amount: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵtemplate(14, CreateSavingModalComponent_div_14_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\");\n      i0.ɵɵtext(17, \"Type: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 7);\n      i0.ɵɵtemplate(19, CreateSavingModalComponent_option_19_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 9);\n      i0.ɵɵtext(21, \" Create \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function CreateSavingModalComponent_Template_button_click_22_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(23, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.createSavingForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.name == null ? null : ctx.name.invalid) && (ctx.name == null ? null : ctx.name.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.amount == null ? null : ctx.amount.invalid) && (ctx.amount == null ? null : ctx.amount.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.types);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.createSavingForm.invalid);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAO,eAAe;AACrE,SAASC,UAAU,EAAEC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;;ICgB/CC,2BAAoC;IAAAA,wBAAQ;IAAAA,iBAAM;;;;;IAClDA,2BAAmC;IAAAA,yDAAyC;IAAAA,iBAAM;;;;;IAClFA,2BAAqC;IAAAA,iDAAiC;IAAAA,iBAAM;;;;;IAC5EA,2BAAqC;IAAAA,kDAAkC;IAAAA,iBAAM;;;;;IAPjFA,+BAE0B;IAEtBA,kFAAkD;IAClDA,kFAAkF;IAClFA,kFAA4E;IAC5EA,kFAA6E;IACjFA,iBAAM;;;;IAJIA,eAA4B;IAA5BA,mHAA4B;IAC5BA,eAA2B;IAA3BA,kHAA2B;IAC3BA,eAA6B;IAA7BA,oHAA6B;IAC7BA,eAA6B;IAA7BA,oHAA6B;;;;;IAgBnCA,2BAAsC;IAAAA,wBAAQ;IAAAA,iBAAM;;;;;IACpDA,2BAAsC;IAAAA,oCAAoB;IAAAA,iBAAM;;;;;IALpEA,+BAE0B;IAEtBA,mFAAoD;IACpDA,mFAAgE;IACpEA,iBAAM;;;;IAFIA,eAA8B;IAA9BA,yHAA8B;IAC9BA,eAA8B;IAA9BA,wHAA8B;;;;;IAQpCA,kCAEuB;IACnBA,YACJ;IAAAA,iBAAS;;;;IAFLA,0CAAkB;IAClBA,eACJ;IADIA,wCACJ;;;ADtCpB,OAAM,MAAOC,0BAA0B;EAqBnC,IAAIC,IAAI;IAAK,OAAO,IAAI,CAACC,gBAAgB,CAACC,GAAG,CAAC,MAAM,CAAC;EAAE;EACvD,IAAIC,MAAM;IAAK,OAAO,IAAI,CAACF,gBAAgB,CAACC,GAAG,CAAC,QAAQ,CAAC;EAAE;EAE3DE,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAtBvB,kBAAa,GAAG,IAAIX,YAAY,EAAU;IAC1C,UAAK,GAAG,IAAIA,YAAY,EAAQ;IAE1C,qBAAgB,GAAG,IAAIG,SAAS,CAAC;MAC7BG,IAAI,EAAE,IAAIJ,WAAW,CAAC,EAAE,EAAED,UAAU,CAACW,OAAO,CAAC,CACzCX,UAAU,CAACY,QAAQ,EACnBZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EACvBb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,EACxBd,UAAU,CAACe,OAAO,CAAC,gBAAgB,CAAC,CACvC,CAAC,CAAC;MACHC,IAAI,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAED,UAAU,CAACW,OAAO,CAAC,CACzCX,UAAU,CAACY,QAAQ,CACtB,CAAC,CAAC;MACHJ,MAAM,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAED,UAAU,CAACW,OAAO,CAAC,CAC3CX,UAAU,CAACY,QAAQ,EACnBZ,UAAU,CAACe,OAAO,CAAC,6BAA6B,CAAC,CACpD,CAAC;KACL,CAAC;EAKkD;EAEpDE,MAAM;IACF,IAAI,CAACP,aAAa,CAACO,MAAM,CAAC,IAAI,CAACX,gBAAgB,CAACY,KAAK,CAAC,CAACC,SAAS,CAC5DC,MAAM,IAAG;MACL,IAAI,CAACC,aAAa,CAACC,IAAI,CAACF,MAAM,CAAC;MAC/B,IAAI,CAACG,KAAK,CAACD,IAAI,EAAE;IACrB,CAAC,EACDE,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACE,KAAK,CAACC,OAAO,CAAC,CAC1C;EACL;EAEAC,MAAM;IACF,IAAI,CAACL,KAAK,CAACD,IAAI,EAAE;EACrB;;AAtCSlB,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA,0BAA0B;EAAAyB;EAAAC;IAAAC;EAAA;EAAAC;IAAAX;IAAAE;EAAA;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCXvCjC,8BAAmB;MAEPA,6BAAa;MAAAA,iBAAK;MAEtBA,+BAA2D;MAAtBA;QAAA,OAAYkC,YAAQ;MAAA,EAAC;MACtDlC,8BAAyB;MACdA,sBAAM;MAAAA,iBAAQ;MAErBA,2BAG2B;MAE3BA,2EAQM;MACVA,iBAAM;MAENA,+BAAyB;MACdA,yBAAQ;MAAAA,iBAAQ;MAEvBA,4BAG6B;MAE7BA,6EAMM;MACVA,iBAAM;MAENA,+BAAyB;MACdA,uBAAM;MAAAA,iBAAQ;MAErBA,kCAA+B;MAC3BA,mFAIS;MACbA,iBAAS;MAGbA,kCAE0C;MACtCA,yBACJ;MAAAA,iBAAS;MAETA,mCAA2B;MAAnBA;QAAA,OAASkC,YAAQ;MAAA,EAAC;MAAClC,uBAAM;MAAAA,iBAAS;;;MAvDxCA,eAA8B;MAA9BA,gDAA8B;MAUvBA,eAAkC;MAAlCA,iHAAkC;MAmBlCA,eAAsC;MAAtCA,yHAAsC;MAalBA,eAAQ;MAARA,mCAAQ;MASjCA,eAAqC;MAArCA,uDAAqC","names":["EventEmitter","Validators","FormControl","FormGroup","i0","CreateSavingModalComponent","name","createSavingForm","get","amount","constructor","savingService","compose","required","minLength","maxLength","pattern","type","create","value","subscribe","saving","createdSaving","emit","close","err","console","error","message","cancel","selectors","inputs","types","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\savings\\components\\create-saving-modal\\create-saving-modal.component.ts","C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\savings\\components\\create-saving-modal\\create-saving-modal.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter} from '@angular/core';\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\n\nimport { Saving } from '../../saving.model';\nimport { SavingService } from '../../saving.service';\n\n@Component({\n    selector: 'app-create-saving-modal',\n    templateUrl: './create-saving-modal.component.html',\n    styleUrls: ['./create-saving-modal.component.scss']\n})\nexport class CreateSavingModalComponent {\n    @Input() types!: string[];\n    @Output() createdSaving = new EventEmitter<Saving>();\n    @Output() close = new EventEmitter<void>();\n\n    createSavingForm = new FormGroup({\n        name: new FormControl('', Validators.compose([\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(12),\n            Validators.pattern('^[a-zA-Z0-9]+$'),\n        ])),\n        type: new FormControl('', Validators.compose([\n            Validators.required,\n        ])),\n        amount: new FormControl('', Validators.compose([\n            Validators.required,\n            Validators.pattern('^[0-9]+([.]{1}[0-9]{1,2})?$'),\n        ]))\n    });\n\n    get name() { return this.createSavingForm.get('name'); }\n    get amount() { return this.createSavingForm.get('amount'); }\n\n    constructor(private savingService: SavingService) { }\n\n    create(): void {\n        this.savingService.create(this.createSavingForm.value).subscribe(\n            saving => {\n                this.createdSaving.emit(saving);\n                this.close.emit();\n            },\n            err => console.error(err.error.message)\n        );\n    }\n    \n    cancel(): void {\n        this.close.emit();\n    }\n}","<div class=\"modal\">\n    <div class=\"modal-content\">\n        <h2>Create saving</h2>\n      \n        <form [formGroup]=\"createSavingForm\" (ngSubmit)=\"create()\">\n            <div class=\"input-group\">\n                <label>Name: </label>\n                \n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\">\n\n                <div \n                    *ngIf=\"name?.invalid && name?.dirty\"\n                    class=\"error-message\">\n\n                    <div *ngIf=\"name?.errors?.required\">Required</div>\n                    <div *ngIf=\"name?.errors?.pattern\">Only latin characters and numbers allowed</div>\n                    <div *ngIf=\"name?.errors?.minlength\">Min length equals to 4 characters</div>\n                    <div *ngIf=\"name?.errors?.maxlength\">Max length equals to 12 characters</div>\n                </div>\n            </div>\n\n            <div class=\"input-group\">\n                <label>Amount: </label>\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Amount\"\n                    formControlName=\"amount\">\n\n                <div \n                    *ngIf=\"amount?.invalid && amount?.dirty\"\n                    class=\"error-message\">\n\n                    <div *ngIf=\"amount?.errors?.required\">Required</div>\n                    <div *ngIf=\"amount?. errors?.pattern\">Only numbers allowed</div>\n                </div>\n            </div>\n\n            <div class=\"input-group\">\n                <label>Type: </label>\n\n                <select formControlName=\"type\">\n                    <option\n                        *ngFor=\"let type of types\"\n                        value=\"{{ type }}\">\n                        {{ type }}\n                    </option>\n                </select>\n            </div>\n\n            <button\n                type=\"submit\"\n                [disabled]=\"createSavingForm.invalid\">\n                Create\n            </button>\n\n            <button (click)=\"cancel()\">Cancel</button>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
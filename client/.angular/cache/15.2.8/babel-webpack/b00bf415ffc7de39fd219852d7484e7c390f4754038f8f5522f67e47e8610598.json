{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction CreateOperationModalComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateOperationModalComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only latin characters and numbers allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateOperationModalComponent_div_9_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Min length equals to 4 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateOperationModalComponent_div_9_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Max length equals to 12 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateOperationModalComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, CreateOperationModalComponent_div_9_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵtemplate(2, CreateOperationModalComponent_div_9_div_2_Template, 2, 0, \"div\", 14);\n    i0.ɵɵtemplate(3, CreateOperationModalComponent_div_9_div_3_Template, 2, 0, \"div\", 14);\n    i0.ɵɵtemplate(4, CreateOperationModalComponent_div_9_div_4_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"maxlength\"]);\n  }\n}\nfunction CreateOperationModalComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateOperationModalComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only numbers allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateOperationModalComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, CreateOperationModalComponent_div_14_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵtemplate(2, CreateOperationModalComponent_div_14_div_2_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.amount == null ? null : ctx_r1.amount.errors == null ? null : ctx_r1.amount.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.amount == null ? null : ctx_r1.amount.errors == null ? null : ctx_r1.amount.errors[\"pattern\"]);\n  }\n}\nfunction CreateOperationModalComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r11 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", type_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r11, \" \");\n  }\n}\nfunction CreateOperationModalComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r12 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", category_r12.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r12.name, \" \");\n  }\n}\nfunction CreateOperationModalComponent_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const saving_r13 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", saving_r13.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", saving_r13.name, \" \");\n  }\n}\nexport class CreateOperationModalComponent {\n  get name() {\n    return this.createOperationForm.get('name');\n  }\n  get amount() {\n    return this.createOperationForm.get('amount');\n  }\n  constructor() {\n    this.types = [];\n    this.categories = [];\n    this.savings = [];\n    this.operationToCreate = new EventEmitter();\n    this.close = new EventEmitter();\n    this.createOperationForm = new FormGroup({\n      name: new FormControl('', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(12), Validators.pattern('^[a-zA-Z0-9]+$')])),\n      type: new FormControl('', Validators.compose([Validators.required])),\n      amount: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]+([.]{1}[0-9]{1,2})?$')])),\n      categoryId: new FormControl('', Validators.compose([Validators.required])),\n      savingId: new FormControl('', Validators.compose([Validators.required]))\n    });\n  }\n  create() {\n    this.operationService.create(this.createOperationForm.value).subscribe(operation => {\n      this.createdOperation.emit(operation);\n      this.close.emit();\n    }, err => console.error(err.error.message));\n  }\n  cancel() {\n    this.close.emit();\n  }\n}\nCreateOperationModalComponent.ɵfac = function CreateOperationModalComponent_Factory(t) {\n  return new (t || CreateOperationModalComponent)();\n};\nCreateOperationModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateOperationModalComponent,\n  selectors: [[\"app-create-operation-modal\"]],\n  inputs: {\n    types: \"types\",\n    categories: \"categories\",\n    savings: \"savings\"\n  },\n  outputs: {\n    operationToCreate: \"operationToCreate\",\n    close: \"close\"\n  },\n  decls: 34,\n  vars: 7,\n  consts: [[1, \"modal\"], [1, \"modal-content\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Amount\", \"formControlName\", \"amount\"], [\"formControlName\", \"type\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"categoryId\"], [\"formControlName\", \"savingId\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"], [1, \"error-message\"], [4, \"ngIf\"], [3, \"value\"]],\n  template: function CreateOperationModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Create operation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateOperationModalComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.create();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n      i0.ɵɵtext(7, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵtemplate(9, CreateOperationModalComponent_div_9_Template, 5, 4, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\");\n      i0.ɵɵtext(12, \"Amount: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵtemplate(14, CreateOperationModalComponent_div_14_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\");\n      i0.ɵɵtext(17, \"Type: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"select\", 7);\n      i0.ɵɵtemplate(19, CreateOperationModalComponent_option_19_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\");\n      i0.ɵɵtext(22, \"Category: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"select\", 9);\n      i0.ɵɵtemplate(24, CreateOperationModalComponent_option_24_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\");\n      i0.ɵɵtext(27, \"Saving\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"select\", 10);\n      i0.ɵɵtemplate(29, CreateOperationModalComponent_option_29_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"button\", 11);\n      i0.ɵɵtext(31, \" Create \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function CreateOperationModalComponent_Template_button_click_32_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(33, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.createOperationForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.name == null ? null : ctx.name.invalid) && (ctx.name == null ? null : ctx.name.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.amount == null ? null : ctx.amount.invalid) && (ctx.amount == null ? null : ctx.amount.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.types);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.savings);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.createOperationForm.invalid);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","FormControl","FormGroup","i0","CreateOperationModalComponent","name","createOperationForm","get","amount","constructor","compose","required","minLength","maxLength","pattern","type","categoryId","savingId","create","operationService","value","subscribe","operation","createdOperation","emit","close","err","console","error","message","cancel","selectors","inputs","types","categories","savings","outputs","operationToCreate","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\operations\\components\\create-operation-modal\\create-operation-modal.component.ts","C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\operations\\components\\create-operation-modal\\create-operation-modal.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter} from '@angular/core';\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\n\nimport { Operation } from '../../operation.model';\nimport { Category } from 'src/app/modules/categories/category.model';\nimport { Saving } from 'src/app/modules/savings/saving.model';\nimport { OperationService } from '../../operations.service';\nimport { CreateOperationDto } from '../../dto/create-operation.dto';\nimport { CreateOperation } from '../../interfaces/create-operation.interface';\n\n@Component({\n    selector: 'app-create-operation-modal',\n    templateUrl: './create-operation-modal.component.html',\n    styleUrls: ['./create-operation-modal.component.scss']\n})\nexport class CreateOperationModalComponent {\n    @Input() types: string[] = [];\n    @Input() categories: Category[] = [];\n    @Input() savings: Saving[] = [];\n    @Output() operationToCreate = new EventEmitter<CreateOperation>();\n    @Output() close = new EventEmitter<void>();\n\n    createOperationForm = new FormGroup({\n        name: new FormControl('', Validators.compose([\n            Validators.required,\n            Validators.minLength(2),\n            Validators.maxLength(12),\n            Validators.pattern('^[a-zA-Z0-9]+$'),\n        ])),\n        type: new FormControl('', Validators.compose([\n            Validators.required,\n        ])),\n        amount: new FormControl('', Validators.compose([\n            Validators.required,\n            Validators.pattern('^[0-9]+([.]{1}[0-9]{1,2})?$'),\n        ])),\n        categoryId: new FormControl('', Validators.compose([\n            Validators.required,\n        ])),\n        savingId: new FormControl('', Validators.compose([\n            Validators.required,\n        ]))\n    });\n    \n    get name() { return this.createOperationForm.get('name'); }\n    get amount() { return this.createOperationForm.get('amount'); }\n\n    constructor() { }\n\n    create() {\n        this.operationService.create(this.createOperationForm.value as unknown as CreateOperationDto).subscribe(\n            operation => {\n                this.createdOperation.emit(operation);\n                this.close.emit();\n            },\n            err => console.error(err.error.message)\n        );\n    }\n\n    cancel() {\n        this.close.emit();\n    }\n}","<div class=\"modal\">\n    <div class=\"modal-content\">\n        <h2>Create operation</h2>\n      \n        <form [formGroup]=\"createOperationForm\" (ngSubmit)=\"create()\">\n            <div class=\"input-group\">\n                <label>Name: </label>\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\">\n\n                <div \n                    *ngIf=\"name?.invalid && name?.dirty\"\n                    class=\"error-message\">\n\n                    <div *ngIf=\"name?.errors?.['required']\">Required</div>\n                    <div *ngIf=\"name?.errors?.['pattern']\">Only latin characters and numbers allowed</div>\n                    <div *ngIf=\"name?.errors?.['minlength']\">Min length equals to 4 characters</div>\n                    <div *ngIf=\"name?.errors?.['maxlength']\">Max length equals to 12 characters</div>\n                </div>\n            </div>\n\n            <div class=\"input-group\">\n                <label>Amount: </label>\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Amount\"\n                    formControlName=\"amount\">\n\n                <div \n                    *ngIf=\"amount?.invalid && amount?.dirty\"\n                    class=\"error-message\">\n\n                    <div *ngIf=\"amount?.errors?.['required']\">Required</div>\n                    <div *ngIf=\"amount?.errors?.['pattern']\">Only numbers allowed</div>\n                </div>\n            </div>\n\n            <div class=\"input-group\">\n                <label>Type: </label>\n\n                <select formControlName=\"type\">\n                    <option\n                        *ngFor=\"let type of types\"\n                        value=\"{{ type }}\">\n                        {{ type }}\n                    </option>\n                </select>\n            </div>\n\n            <div class=\"input-group\">\n                <label>Category: </label>\n\n                <select formControlName=\"categoryId\">\n                    <option\n                        *ngFor=\"let category of categories\"\n                        value=\"{{ category.id }}\">\n                        {{ category.name }}\n                    </option>\n                </select>\n            </div>\n\n            <div class=\"input-group\">\n                <label>Saving</label>\n\n                <select formControlName=\"savingId\">\n                    <option\n                        *ngFor=\"let saving of savings\"\n                        value=\"{{ saving.id }}\">\n                        {{ saving.name }}\n                    </option>\n                </select>\n            </div>\n\n            <button\n                type=\"submit\"\n                [disabled]=\"createOperationForm.invalid\">\n                Create\n            </button>\n\n            <button (click)=\"cancel()\">Cancel</button>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
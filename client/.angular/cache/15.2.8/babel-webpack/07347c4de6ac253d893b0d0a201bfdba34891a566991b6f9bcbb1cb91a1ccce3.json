{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../operation.service\";\nimport * as i2 from \"../../pipes/update-operation-dto.pipe\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdateOperationModalComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateOperationModalComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only latin characters and numbers allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateOperationModalComponent_div_11_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Min length equals to 4 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateOperationModalComponent_div_11_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Max length equals to 12 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateOperationModalComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, UpdateOperationModalComponent_div_11_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵtemplate(2, UpdateOperationModalComponent_div_11_div_2_Template, 2, 0, \"div\", 18);\n    i0.ɵɵtemplate(3, UpdateOperationModalComponent_div_11_div_3_Template, 2, 0, \"div\", 18);\n    i0.ɵɵtemplate(4, UpdateOperationModalComponent_div_11_div_4_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1 == null ? null : _r1.errors == null ? null : _r1.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1 == null ? null : _r1.errors == null ? null : _r1.errors.pattern);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1 == null ? null : _r1.errors == null ? null : _r1.errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1 == null ? null : _r1.errors == null ? null : _r1.errors.maxlength);\n  }\n}\nfunction UpdateOperationModalComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateOperationModalComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only numbers allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateOperationModalComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, UpdateOperationModalComponent_div_17_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵtemplate(2, UpdateOperationModalComponent_div_17_div_2_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3 == null ? null : _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3 == null ? null : _r3.errors == null ? null : _r3.errors.pattern);\n  }\n}\nfunction UpdateOperationModalComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r14 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", type_r14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r14, \" \");\n  }\n}\nfunction UpdateOperationModalComponent_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", category_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r15.name, \" \");\n  }\n}\nfunction UpdateOperationModalComponent_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const saving_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", saving_r16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", saving_r16.name, \" \");\n  }\n}\nexport class UpdateOperationModalComponent {\n  constructor(operationService, updateOperationDtoPipe) {\n    this.operationService = operationService;\n    this.updateOperationDtoPipe = updateOperationDtoPipe;\n    this.updatedOperation = new EventEmitter();\n    this.close = new EventEmitter();\n  }\n  update() {\n    this.operationService.update(this.updateOperationDtoPipe.transform(this.operation)).subscribe(() => {\n      this.updatedOperation.emit(this.operation);\n      this.close.emit();\n    }, err => console.error(err.error.message));\n  }\n  cancel() {\n    this.close.emit();\n  }\n  ngOnInit() {\n    const category = this.categories.find(item => item.id === this.operation.category?.id);\n    const saving = this.savings.find(item => item.id === this.operation.saving?.id);\n    this.operation.category = category;\n    this.operation.saving = saving;\n  }\n}\nUpdateOperationModalComponent.ɵfac = function UpdateOperationModalComponent_Factory(t) {\n  return new (t || UpdateOperationModalComponent)(i0.ɵɵdirectiveInject(i1.OperationService), i0.ɵɵdirectiveInject(i2.UpdateOperationDtoPipe));\n};\nUpdateOperationModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateOperationModalComponent,\n  selectors: [[\"app-update-operation-modal\"]],\n  inputs: {\n    operation: \"operation\",\n    types: \"types\",\n    categories: \"categories\",\n    savings: \"savings\"\n  },\n  outputs: {\n    updatedOperation: \"updatedOperation\",\n    close: \"close\"\n  },\n  decls: 37,\n  vars: 11,\n  consts: [[1, \"modal\"], [1, \"modal-content\"], [3, \"ngSubmit\"], [\"updateOperationForm\", \"ngForm\"], [1, \"input-group\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", \"minlength\", \"2\", \"maxlength\", \"12\", \"pattern\", \"^[a-zA-Z0-9]+$\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"amount\", \"required\", \"\", \"pattern\", \"^[0-9]+([.]{1}[0-9]{1,2})?$\", 3, \"ngModel\", \"ngModelChange\"], [\"amount\", \"ngModel\"], [\"name\", \"type\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"category\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"saving\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"], [1, \"error-message\"], [4, \"ngIf\"], [3, \"value\"], [3, \"ngValue\"]],\n  template: function UpdateOperationModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Update operation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateOperationModalComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\");\n      i0.ɵɵtext(8, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateOperationModalComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.operation.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, UpdateOperationModalComponent_div_11_Template, 5, 4, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\");\n      i0.ɵɵtext(14, \"Amount: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateOperationModalComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.operation.amount = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, UpdateOperationModalComponent_div_17_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\");\n      i0.ɵɵtext(20, \"Type: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"select\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateOperationModalComponent_Template_select_ngModelChange_21_listener($event) {\n        return ctx.operation.type = $event;\n      });\n      i0.ɵɵtemplate(22, UpdateOperationModalComponent_option_22_Template, 2, 2, \"option\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\");\n      i0.ɵɵtext(25, \"Category: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateOperationModalComponent_Template_select_ngModelChange_26_listener($event) {\n        return ctx.operation.category = $event;\n      });\n      i0.ɵɵtemplate(27, UpdateOperationModalComponent_option_27_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 4)(29, \"label\");\n      i0.ɵɵtext(30, \"Saving: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"select\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateOperationModalComponent_Template_select_ngModelChange_31_listener($event) {\n        return ctx.operation.saving = $event;\n      });\n      i0.ɵɵtemplate(32, UpdateOperationModalComponent_option_32_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"button\", 15);\n      i0.ɵɵtext(34, \" Update \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function UpdateOperationModalComponent_Template_button_click_35_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(36, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      const _r1 = i0.ɵɵreference(10);\n      const _r3 = i0.ɵɵreference(16);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.operation.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r1 == null ? null : _r1.invalid) && (_r1 == null ? null : _r1.dirty));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.operation.amount);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r3 == null ? null : _r3.invalid) && (_r3 == null ? null : _r3.dirty));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.operation.type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.types);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.operation.category);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.operation.saving);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.savings);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.MaxLengthValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","UpdateOperationModalComponent","constructor","operationService","updateOperationDtoPipe","update","transform","operation","subscribe","updatedOperation","emit","close","err","console","error","message","cancel","ngOnInit","category","categories","find","item","id","saving","savings","selectors","inputs","types","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\operations\\components\\update-operation-modal\\update-operation-modal.component.ts","C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\operations\\components\\update-operation-modal\\update-operation-modal.component.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Operation } from '../../operation.model';\nimport { Category } from 'src/app/modules/categories/category.model';\nimport { Saving } from 'src/app/modules/savings/saving.model';\nimport { OperationService } from '../../operation.service';\nimport { UpdateOperationDtoPipe } from '../../pipes/update-operation-dto.pipe';\n\n@Component({\n    selector: 'app-update-operation-modal',\n    templateUrl: './update-operation-modal.component.html',\n    styleUrls: ['./update-operation-modal.component.scss']\n})\nexport class UpdateOperationModalComponent implements OnInit {\n    @Input() operation!: Operation;\n    @Input() types!: string[];\n    @Input() categories!: Category[];\n    @Input() savings!: Saving[];\n    @Output() updatedOperation = new EventEmitter<Operation>();\n    @Output() close = new EventEmitter<void>();\n\n    constructor(\n        private operationService: OperationService,\n        private updateOperationDtoPipe: UpdateOperationDtoPipe\n    ) { }\n\n    update(): void {\n        this.operationService.update(\n            this.updateOperationDtoPipe.transform(this.operation)\n        ).subscribe(\n            () => {\n                this.updatedOperation.emit(this.operation);\n                this.close.emit();\n            },\n            err => console.error(err.error.message)\n        );\n    }\n\n    cancel(): void {\n        this.close.emit();\n    }\n\n    ngOnInit(): void {\n        const category = this.categories.find(item => item.id === this.operation.category?.id);\n        const saving = this.savings.find(item => item.id === this.operation.saving?.id);\n        this.operation.category = category!;\n        this.operation.saving = saving!;\n    }\n}","<div class=\"modal\">\n    <div class=\"modal-content\">\n        <h2>Update operation</h2>\n\n        <form #updateOperationForm=\"ngForm\" (ngSubmit)=\"update()\">\n            <div class=\"input-group\">\n                <label>Name: </label>\n\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    [(ngModel)]=\"operation.name\"\n                    #name=\"ngModel\"\n                    required\n                    minlength=\"2\"\n                    maxlength=\"12\"\n                    pattern=\"^[a-zA-Z0-9]+$\">\n\n                <div\n                    *ngIf=\"name?.invalid && name?.dirty\"\n                    class=\"error-message\">\n\n                    <div *ngIf=\"name?.errors?.required\">Required</div>\n                    <div *ngIf=\"name?.errors?.pattern\">Only latin characters and numbers allowed</div>\n                    <div *ngIf=\"name?.errors?.minlength\">Min length equals to 4 characters</div>\n                    <div *ngIf=\"name?.errors?.maxlength\">Max length equals to 12 characters</div>\n                </div>\n            </div>\n    \n            <div class=\"input-group\">\n                <label>Amount: </label>\n\n                <input\n                    type=\"text\"\n                    name=\"amount\"\n                    [(ngModel)]=\"operation.amount\"\n                    #amount=\"ngModel\"\n                    required\n                    pattern=\"^[0-9]+([.]{1}[0-9]{1,2})?$\">\n\n                <div \n                    *ngIf=\"amount?.invalid && amount?.dirty\"\n                    class=\"error-message\">\n\n                    <div *ngIf=\"amount?.errors?.required\">Required</div>\n                    <div *ngIf=\"amount?.errors?.pattern\">Only numbers allowed</div>\n                </div>\n            </div>\n            \n            \n            <div class=\"input-group\">\n                <label>Type: </label>\n\n                <select name=\"type\" [(ngModel)]=\"operation.type\" required>\n                    <option\n                        *ngFor=\"let type of types\"\n                        value=\"{{ type }}\">\n                        {{ type }}\n                    </option>\n                </select>\n            </div>\n\n            <div class=\"input-group\">\n                <label>Category: </label>\n\n                <select name=\"category\" [(ngModel)]=\"operation.category\" required>\n                    <option\n                        *ngFor=\"let category of categories\"\n                        [ngValue]=\"category\">\n                        {{ category.name }}\n                    </option>\n                </select>\n            </div>\n    \n            <div class=\"input-group\">\n                <label>Saving: </label>\n\n                <select name=\"saving\" [(ngModel)]=\"operation.saving\" required>\n                    <option\n                        *ngFor=\"let saving of savings\"\n                        [ngValue]=\"saving\">\n                        {{ saving.name }}\n                    </option>\n                </select>\n            </div>\n\n            <button\n                type=\"submit\"\n                [disabled]=\"updateOperationForm.invalid\">\n                Update\n            </button>\n\n            <button (click)=\"cancel()\">Cancel</button>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
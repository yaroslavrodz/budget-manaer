{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet OperationsPage = class OperationsPage {\n  constructor(operationService, categoryService, savingService) {\n    this.operationService = operationService;\n    this.categoryService = categoryService;\n    this.savingService = savingService;\n    this.operations = [];\n    this.types = ['Incoming', 'Spend'];\n    this.categories = [];\n    this.savings = [];\n    this.filter = {};\n    this.operationsLength = 0;\n    this.pageIndex = 1;\n    this.pageSize = 5;\n    this.pageSizeOptions = [5, 10, 25, 100];\n    this.visiblePagesRange = 5;\n    this.createMode = false;\n    this.editMode = false;\n    this.deleteMode = false;\n    this.operationToUpdate = null;\n    this.operationToDelete = null;\n  }\n  applyFilter(filter) {\n    this.filter = filter;\n    this.getOperations();\n  }\n  applyPage(event) {\n    this.pageIndex = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.getOperations();\n  }\n  getOperations() {\n    this.operationService.getAll({\n      page: this.pageIndex,\n      limit: this.pageSize,\n      filter: this.filter\n    }).subscribe(data => {\n      this.operations = data.rows;\n      this.operationsLength = data.count;\n    });\n  }\n  addToOperations(operation) {\n    this.operations.unshift(operation);\n  }\n  replaceOperation(operation) {\n    const operationToUpdate = this.operations.find(item => item.id === operation.id);\n    const index = this.operations.indexOf(operationToUpdate);\n    this.operations.splice(index, 1, operation);\n  }\n  removeOperation() {\n    this.operations = this.operations.filter(operation => operation.id !== this.operationToDelete.id);\n    this.operationsLength--;\n  }\n  enableCreateMode() {\n    this.createMode = true;\n  }\n  disableCreateMode() {\n    this.createMode = false;\n  }\n  enableEditMode(operation) {\n    this.editMode = true;\n    this.operationToUpdate = JSON.parse(JSON.stringify(operation));\n  }\n  disableEditMode() {\n    this.editMode = false;\n    this.operationToUpdate = null;\n  }\n  enableDeleteMode(operation) {\n    this.deleteMode = true;\n    this.operationToDelete = JSON.parse(JSON.stringify(operation));\n  }\n  disableDeleteMode() {\n    this.deleteMode = false;\n    this.operationToDelete = null;\n  }\n  ngOnInit() {\n    this.getOperations();\n    this.savingService.get().subscribe(data => this.savings = data, err => console.error(err.error.message));\n    this.categoryService.get().subscribe(data => this.categories = data, err => console.error(err.error.message));\n  }\n};\nOperationsPage = __decorate([Component({\n  selector: 'app-operations',\n  templateUrl: './operations.page.html',\n  styleUrls: ['./operations.page.scss']\n})], OperationsPage);\nexport { OperationsPage };","map":{"version":3,"mappings":"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","names":["Component","OperationsPage","constructor","operationService","categoryService","savingService","applyFilter","filter","getOperations","applyPage","event","pageIndex","pageSize","getAll","page","limit","subscribe","data","operations","rows","operationsLength","count","addToOperations","operation","unshift","replaceOperation","operationToUpdate","find","item","id","index","indexOf","splice","removeOperation","operationToDelete","enableCreateMode","createMode","disableCreateMode","enableEditMode","editMode","JSON","parse","stringify","disableEditMode","enableDeleteMode","deleteMode","disableDeleteMode","ngOnInit","get","savings","err","console","error","message","categories","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\operations\\pages\\operations\\operations.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { SavingService } from 'src/app/modules/savings/saving.service';\nimport { CategoryService } from 'src/app/modules/categories/category.service';\nimport { Operation } from '../../operation.model';\nimport { Saving } from 'src/app/modules/savings/saving.model';\nimport { Category } from 'src/app/modules/categories/category.model';\nimport { OperationService } from '../../operations.service';\nimport { OperationFilterDto } from '../../dto/operation.filter.dto';\nimport { PageEvent } from 'src/app/shared/interfaces/page-event.interface';\n\n@Component({\n  selector: 'app-operations',\n  templateUrl: './operations.page.html',\n  styleUrls: ['./operations.page.scss']\n})\nexport class OperationsPage implements OnInit {\n    operations: Operation[] = [];\n    types: string[] = ['Incoming', 'Spend'];\n    categories: Category[] = [];\n    savings: Saving[] = [];\n    \n    filter: OperationFilterDto = {};\n\n    operationsLength = 0;\n    pageIndex = 1;\n    pageSize = 5;\n    pageSizeOptions: number[] = [5, 10, 25, 100];\n    visiblePagesRange = 5;\n    \n    createMode = false;\n    editMode = false;\n    deleteMode = false;\n    operationToUpdate: Operation | null = null;\n    operationToDelete: Operation | null = null;\n\n    constructor(\n        private operationService: OperationService,\n        private categoryService: CategoryService,\n        private savingService: SavingService\n    ) { }\n\n    applyFilter(filter: OperationFilterDto) {\n        this.filter = filter;\n        this.getOperations();\n    }\n\n    applyPage(event: PageEvent) {\n        this.pageIndex = event.pageIndex;\n        this.pageSize = event.pageSize;\n        this.getOperations();\n    }\n\n    getOperations() {\n        this.operationService.getAll({\n            page: this.pageIndex,\n            limit: this.pageSize,\n            filter: this.filter\n        }).subscribe(\n            data => {\n                this.operations = data.rows;\n                this.operationsLength = data.count;\n            }\n        );\n    }\n\n    addToOperations(operation: Operation) {\n        this.operations.unshift(operation);\n    }\n\n    replaceOperation(operation: Operation) {\n        const operationToUpdate = this.operations.find(item => item.id === operation.id)!;\n        const index = this.operations.indexOf(operationToUpdate);\n        this.operations.splice(index, 1, operation);\n    }\n\n    removeOperation() {\n        this.operations = this.operations.filter(operation =>\n            operation.id !== this.operationToDelete!.id);\n        this.operationsLength--;\n    }\n\n    enableCreateMode() {\n        this.createMode = true;\n    }\n\n    disableCreateMode() {\n        this.createMode = false;\n    }\n\n    enableEditMode(operation: Operation): void {\n        this.editMode = true;\n        this.operationToUpdate = JSON.parse(JSON.stringify(operation));\n    }\n\n    disableEditMode(): void {\n        this.editMode = false;\n        this.operationToUpdate = null;\n    }\n    \n    enableDeleteMode(operation: Operation): void {\n        this.deleteMode = true;\n        this.operationToDelete = JSON.parse(JSON.stringify(operation));\n    }\n\n    disableDeleteMode(): void {\n        this.deleteMode = false;\n        this.operationToDelete = null;\n    }\n\n    ngOnInit(): void {\n        this.getOperations();\n\n        this.savingService.get().subscribe(\n            data => this.savings = data,\n            err => console.error(err.error.message)\n        );\n        \n        this.categoryService.get().subscribe(\n            data => this.categories = data,\n            err => console.error(err.error.message)\n        );\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
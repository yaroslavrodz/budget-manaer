{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { OperationType } from '../../enums/operation-type.enum';\nlet OperationsPage = class OperationsPage {\n  constructor(operationsService, categoryService, savingService) {\n    this.operationsService = operationsService;\n    this.categoryService = categoryService;\n    this.savingService = savingService;\n    this.operations = [];\n    this.types = Object.values(OperationType);\n    this.categories = [];\n    this.savings = [];\n    this.filter = {};\n    this.operationsLength = 0;\n    this.pageIndex = 1;\n    this.pageSize = 5;\n    this.pageSizeOptions = [5, 10, 25, 100];\n    this.visiblePagesRange = 5;\n    this.createMode = false;\n    this.editMode = false;\n    this.deleteMode = false;\n    this.operationToUpdate = null;\n    this.operationToDeleteId = null;\n  }\n  applyFilter(filter) {\n    this.filter = filter;\n    this.findOperations();\n  }\n  applyPage(event) {\n    this.pageIndex = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.findOperations();\n  }\n  findOperations() {\n    this.operationsService.findAll({\n      page: this.pageIndex,\n      limit: this.pageSize,\n      filter: this.filter\n    }).subscribe(data => {\n      this.operations = data.rows;\n      this.operationsLength = data.count;\n    });\n  }\n  createOperation(operation) {\n    this.operationsService.create(operation).subscribe(() => this.findOperations());\n  }\n  updateOperation(operation) {\n    this.operationsService.update(operation).subscribe(() => this.findOperations());\n  }\n  deleteOperation(id) {\n    this.operationsService.delete(id).subscribe(() => this.findOperations());\n  }\n  enableCreateMode() {\n    this.createMode = true;\n  }\n  disableCreateMode() {\n    this.createMode = false;\n  }\n  enableEditMode(opreation) {\n    this.editMode = true;\n    this.operationToUpdate = opreation;\n  }\n  disableEditMode() {\n    this.editMode = false;\n    this.operationToUpdate = null;\n  }\n  enableDeleteMode(id) {\n    this.deleteMode = true;\n    this.operationToDeleteId = id;\n  }\n  disableDeleteMode() {\n    this.deleteMode = false;\n    this.operationToDeleteId = null;\n  }\n  ngOnInit() {\n    this.findOperations();\n    this.savingService.get().subscribe(data => this.savings = data);\n    this.categoryService.get().subscribe(data => this.categories = data);\n  }\n};\nOperationsPage = __decorate([Component({\n  selector: 'app-operations',\n  templateUrl: './operations.page.html',\n  styleUrls: ['./operations.page.scss']\n})], OperationsPage);\nexport { OperationsPage };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAKjD,SAASC,aAAa,QAAQ,iCAAiC;AAcxD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAoBvBC,YACYC,iBAAoC,EACpCC,eAAgC,EAChCC,aAA4B;IAF5B,sBAAiB,GAAjBF,iBAAiB;IACjB,oBAAe,GAAfC,eAAe;IACf,kBAAa,GAAbC,aAAa;IAtBzB,eAAU,GAAgB,EAAE;IAC5B,UAAK,GAAoBC,MAAM,CAACC,MAAM,CAACP,aAAa,CAAC;IACrD,eAAU,GAAe,EAAE;IAC3B,YAAO,GAAa,EAAE;IAEtB,WAAM,GAAqB,EAAE;IAE7B,qBAAgB,GAAG,CAAC;IACpB,cAAS,GAAG,CAAC;IACb,aAAQ,GAAG,CAAC;IACZ,oBAAe,GAAa,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;IAC5C,sBAAiB,GAAG,CAAC;IAErB,eAAU,GAAG,KAAK;IAClB,aAAQ,GAAG,KAAK;IAChB,eAAU,GAAG,KAAK;IAClB,sBAAiB,GAAqB,IAAI;IAC1C,wBAAmB,GAAkB,IAAI;EAMrC;EAEJQ,WAAW,CAACC,MAAwB;IAChC,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,cAAc,EAAE;EACzB;EAEAC,SAAS,CAACC,KAAgB;IACtB,IAAI,CAACC,SAAS,GAAGD,KAAK,CAACC,SAAS;IAChC,IAAI,CAACC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IAC9B,IAAI,CAACJ,cAAc,EAAE;EACzB;EAEAA,cAAc;IACV,IAAI,CAACP,iBAAiB,CAACY,OAAO,CAAC;MAC3BC,IAAI,EAAE,IAAI,CAACH,SAAS;MACpBI,KAAK,EAAE,IAAI,CAACH,QAAQ;MACpBL,MAAM,EAAE,IAAI,CAACA;KAChB,CAAC,CAACS,SAAS,CACRC,IAAI,IAAG;MACH,IAAI,CAACC,UAAU,GAAGD,IAAI,CAACE,IAAI;MAC3B,IAAI,CAACC,gBAAgB,GAAGH,IAAI,CAACI,KAAK;IACtC,CAAC,CACJ;EACL;EAEAC,eAAe,CAACC,SAA0B;IACtC,IAAI,CAACtB,iBAAiB,CAACuB,MAAM,CAACD,SAAS,CAAC,CAACP,SAAS,CAC9C,MAAM,IAAI,CAACR,cAAc,EAAE,CAC9B;EACL;EAEAiB,eAAe,CAACF,SAA0B;IACtC,IAAI,CAACtB,iBAAiB,CAACyB,MAAM,CAACH,SAAS,CAAC,CAACP,SAAS,CAC9C,MAAM,IAAI,CAACR,cAAc,EAAE,CAC9B;EACL;EAEAmB,eAAe,CAACC,EAAU;IACtB,IAAI,CAAC3B,iBAAiB,CAAC4B,MAAM,CAACD,EAAE,CAAC,CAACZ,SAAS,CACvC,MAAM,IAAI,CAACR,cAAc,EAAE,CAC9B;EACL;EAEAsB,gBAAgB;IACZ,IAAI,CAACC,UAAU,GAAG,IAAI;EAC1B;EAEAC,iBAAiB;IACb,IAAI,CAACD,UAAU,GAAG,KAAK;EAC3B;EAEAE,cAAc,CAACC,SAAoB;IAC/B,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,iBAAiB,GAAGF,SAAS;EACtC;EAEAG,eAAe;IACX,IAAI,CAACF,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,iBAAiB,GAAG,IAAI;EACjC;EAEAE,gBAAgB,CAACV,EAAU;IACvB,IAAI,CAACW,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,mBAAmB,GAAGZ,EAAE;EACjC;EAEAa,iBAAiB;IACb,IAAI,CAACF,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,mBAAmB,GAAG,IAAI;EACnC;EAEAE,QAAQ;IACJ,IAAI,CAAClC,cAAc,EAAE;IACrB,IAAI,CAACL,aAAa,CAACwC,GAAG,EAAE,CAAC3B,SAAS,CAC9BC,IAAI,IAAI,IAAI,CAAC2B,OAAO,GAAG3B,IAAI,CAC9B;IACD,IAAI,CAACf,eAAe,CAACyC,GAAG,EAAE,CAAC3B,SAAS,CAChCC,IAAI,IAAI,IAAI,CAAC4B,UAAU,GAAG5B,IAAI,CACjC;EACL;CACH;AAzGYlB,cAAc,eAL1BF,SAAS,CAAC;EACTiD,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWjD,cAAc,CAyG1B;SAzGYA,cAAc","names":["Component","OperationType","OperationsPage","constructor","operationsService","categoryService","savingService","Object","values","applyFilter","filter","findOperations","applyPage","event","pageIndex","pageSize","findAll","page","limit","subscribe","data","operations","rows","operationsLength","count","createOperation","operation","create","updateOperation","update","deleteOperation","id","delete","enableCreateMode","createMode","disableCreateMode","enableEditMode","opreation","editMode","operationToUpdate","disableEditMode","enableDeleteMode","deleteMode","operationToDeleteId","disableDeleteMode","ngOnInit","get","savings","categories","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\operations\\pages\\operations\\operations.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { OperationsService } from '../../operations.service';\nimport { SavingService } from 'src/app/modules/savings/savings.service';\nimport { CategoryService } from 'src/app/modules/categories/category.service';\nimport { OperationType } from '../../enums/operation-type.enum';\nimport { Saving } from 'src/app/modules/savings/saving.model';\nimport { Category } from 'src/app/modules/categories/category.model';\nimport { PageEvent } from 'src/app/shared/interfaces/page-event.interface';\nimport { OperationsFilter } from '../../interfaces/operations-filter.interface';\nimport { CreateOperation } from '../../interfaces/create-operation.interface';\nimport { UpdateOperation } from '../../interfaces/update-operation.interface';\nimport { Operation } from '../../interfaces/operation.interface';\n\n@Component({\n  selector: 'app-operations',\n  templateUrl: './operations.page.html',\n  styleUrls: ['./operations.page.scss']\n})\nexport class OperationsPage implements OnInit {\n    operations: Operation[] = [];\n    types: OperationType[] = Object.values(OperationType);\n    categories: Category[] = [];\n    savings: Saving[] = [];\n    \n    filter: OperationsFilter = {};\n\n    operationsLength = 0;\n    pageIndex = 1;\n    pageSize = 5;\n    pageSizeOptions: number[] = [5, 10, 25, 100];\n    visiblePagesRange = 5;\n    \n    createMode = false;\n    editMode = false;\n    deleteMode = false;\n    operationToUpdate: Operation | null = null;\n    operationToDeleteId: number | null = null;\n\n    constructor(\n        private operationsService: OperationsService,\n        private categoryService: CategoryService,\n        private savingService: SavingService\n    ) { }\n\n    applyFilter(filter: OperationsFilter) {\n        this.filter = filter;\n        this.findOperations();\n    }\n\n    applyPage(event: PageEvent) {\n        this.pageIndex = event.pageIndex;\n        this.pageSize = event.pageSize;\n        this.findOperations();\n    }\n\n    findOperations() {\n        this.operationsService.findAll({\n            page: this.pageIndex,\n            limit: this.pageSize,\n            filter: this.filter\n        }).subscribe(\n            data => {\n                this.operations = data.rows;\n                this.operationsLength = data.count;\n            }\n        );\n    }\n\n    createOperation(operation: CreateOperation) {\n        this.operationsService.create(operation).subscribe(\n            () => this.findOperations()\n        );\n    }\n\n    updateOperation(operation: UpdateOperation) {\n        this.operationsService.update(operation).subscribe(\n            () => this.findOperations()\n        );\n    }\n\n    deleteOperation(id: number) {\n        this.operationsService.delete(id).subscribe(\n            () => this.findOperations()\n        );\n    }\n\n    enableCreateMode() {\n        this.createMode = true;\n    }\n\n    disableCreateMode() {\n        this.createMode = false;\n    }\n\n    enableEditMode(opreation: Operation) {\n        this.editMode = true;\n        this.operationToUpdate = opreation;\n    }\n\n    disableEditMode() {\n        this.editMode = false;\n        this.operationToUpdate = null;\n    }\n    \n    enableDeleteMode(id: number) {\n        this.deleteMode = true;\n        this.operationToDeleteId = id;\n    }\n\n    disableDeleteMode() {\n        this.deleteMode = false;\n        this.operationToDeleteId = null;\n    }\n\n    ngOnInit() {\n        this.findOperations();\n        this.savingService.get().subscribe(\n            data => this.savings = data,\n        );\n        this.categoryService.get().subscribe(\n            data => this.categories = data,\n        );\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SavingsPage = class SavingsPage {\n  constructor(savingService) {\n    this.savingService = savingService;\n    this.savings = [];\n    this.types = ['Cash', 'Digital'];\n    this.selectedType = null;\n    this.createMode = false;\n    this.editMode = false;\n    this.deleteMode = false;\n    this.savingToUpdate = null;\n    this.savingToDelete = null;\n  }\n  applyType(type) {\n    this.selectedType = type;\n    this.getSavings();\n  }\n  getSavings() {\n    this.savingService.get(this.selectedType).subscribe(savings => this.savings = savings, err => console.error(err.error.message));\n  }\n  addToSavings(saving) {\n    this.savings.unshift(saving);\n  }\n  replaceSaving(saving) {\n    const savingToUpdate = this.savings.find(item => item.id === saving.id);\n    const index = this.savings.indexOf(savingToUpdate);\n    this.savings.splice(index, 1, saving);\n  }\n  removeSaving() {\n    this.savings = this.savings.filter(saving => saving.id !== this.savingToDelete.id);\n  }\n  enableCreateMode() {\n    this.createMode = true;\n  }\n  disableCreateMode() {\n    this.createMode = false;\n  }\n  enableEditMode(saving) {\n    this.editMode = true;\n    this.savingToUpdate = {\n      ...saving\n    };\n  }\n  disableEditMode() {\n    this.editMode = false;\n    this.savingToUpdate = null;\n  }\n  enableDeleteMode(saving) {\n    this.deleteMode = true;\n    this.savingToDelete = saving;\n  }\n  disableDeleteMode() {\n    this.deleteMode = false;\n    this.savingToDelete = null;\n  }\n  ngOnInit() {\n    this.getSavings();\n  }\n};\nSavingsPage = __decorate([Component({\n  selector: 'app-savings',\n  templateUrl: './savings.page.html',\n  styleUrls: ['./savings.page.scss']\n})], SavingsPage);\nexport { SavingsPage };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAWpBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAVjC,YAAO,GAAa,EAAE;IACtB,UAAK,GAAa,CAAC,MAAM,EAAE,SAAS,CAAC;IACrC,iBAAY,GAAkB,IAAI;IAElC,eAAU,GAAG,KAAK;IAClB,aAAQ,GAAG,KAAK;IAChB,eAAU,GAAG,KAAK;IAClB,mBAAc,GAAkB,IAAI;IACpC,mBAAc,GAAkB,IAAI;EAEgB;EAEpDC,SAAS,CAACC,IAAmB;IACzB,IAAI,CAACC,YAAY,GAAGD,IAAI;IACxB,IAAI,CAACE,UAAU,EAAE;EACrB;EAEAA,UAAU;IACN,IAAI,CAACJ,aAAa,CAACK,GAAG,CAAC,IAAI,CAACF,YAAY,CAAC,CAACG,SAAS,CAC/CC,OAAO,IAAI,IAAI,CAACA,OAAO,GAAGA,OAAO,EACjCC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACE,KAAK,CAACC,OAAO,CAAC,CAC1C;EACL;EAEAC,YAAY,CAACC,MAAc;IACvB,IAAI,CAACN,OAAO,CAACO,OAAO,CAACD,MAAM,CAAC;EAChC;EAEAE,aAAa,CAACF,MAAc;IACxB,MAAMG,cAAc,GAAG,IAAI,CAACT,OAAO,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACM,EAAE,CAAE;IACxE,MAAMC,KAAK,GAAG,IAAI,CAACb,OAAO,CAACc,OAAO,CAACL,cAAc,CAAC;IAClD,IAAI,CAACT,OAAO,CAACe,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEP,MAAM,CAAC;EACzC;EAEAU,YAAY;IACR,IAAI,CAAChB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACiB,MAAM,CAACX,MAAM,IACrCA,MAAM,CAACM,EAAE,KAAK,IAAI,CAACM,cAAe,CAACN,EAAE,CAAC;EAC9C;EAEAO,gBAAgB;IACZ,IAAI,CAACC,UAAU,GAAG,IAAI;EAC1B;EAEAC,iBAAiB;IACb,IAAI,CAACD,UAAU,GAAG,KAAK;EAC3B;EAEAE,cAAc,CAAChB,MAAc;IACzB,IAAI,CAACiB,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACd,cAAc,GAAG;MAAE,GAAGH;IAAM,CAAE;EACvC;EAEAkB,eAAe;IACX,IAAI,CAACD,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACd,cAAc,GAAG,IAAI;EAC9B;EAEAgB,gBAAgB,CAACnB,MAAc;IAC3B,IAAI,CAACoB,UAAU,GAAG,IAAI;IACtB,IAAI,CAACR,cAAc,GAAGZ,MAAM;EAChC;EAEAqB,iBAAiB;IACb,IAAI,CAACD,UAAU,GAAG,KAAK;IACvB,IAAI,CAACR,cAAc,GAAG,IAAI;EAC9B;EAEAU,QAAQ;IACJ,IAAI,CAAC/B,UAAU,EAAE;EACrB;CACH;AAvEYN,WAAW,eALvBD,SAAS,CAAC;EACPuC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,qBAAqB;EAClCC,SAAS,EAAE,CAAC,qBAAqB;CACpC,CAAC,GACWxC,WAAW,CAuEvB;SAvEYA,WAAW","names":["Component","SavingsPage","constructor","savingService","applyType","type","selectedType","getSavings","get","subscribe","savings","err","console","error","message","addToSavings","saving","unshift","replaceSaving","savingToUpdate","find","item","id","index","indexOf","splice","removeSaving","filter","savingToDelete","enableCreateMode","createMode","disableCreateMode","enableEditMode","editMode","disableEditMode","enableDeleteMode","deleteMode","disableDeleteMode","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\savings\\pages\\savings\\savings.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Saving } from '../../saving.model';\nimport { SavingService } from '../../savings.service';\n\n@Component({\n    selector: 'app-savings',\n    templateUrl: './savings.page.html',\n    styleUrls: ['./savings.page.scss']\n})\nexport class SavingsPage implements OnInit {\n    savings: Saving[] = [];\n    types: string[] = ['Cash', 'Digital'];\n    selectedType: string | null = null;\n\n    createMode = false;\n    editMode = false;\n    deleteMode = false;\n    savingToUpdate: Saving | null = null;\n    savingToDelete: Saving | null = null;\n\n    constructor(private savingService: SavingService) { }\n    \n    applyType(type: string | null): void {\n        this.selectedType = type;\n        this.getSavings();\n    }\n\n    getSavings(): void {\n        this.savingService.get(this.selectedType).subscribe(\n            savings => this.savings = savings,\n            err => console.error(err.error.message)\n        );\n    }\n\n    addToSavings(saving: Saving): void {\n        this.savings.unshift(saving);\n    }\n\n    replaceSaving(saving: Saving): void {\n        const savingToUpdate = this.savings.find(item => item.id === saving.id)!;\n        const index = this.savings.indexOf(savingToUpdate);\n        this.savings.splice(index, 1, saving);\n    }\n\n    removeSaving(): void {\n        this.savings = this.savings.filter(saving =>\n            saving.id !== this.savingToDelete!.id);\n    }\n\n    enableCreateMode(): void {\n        this.createMode = true;\n    }\n\n    disableCreateMode(): void {\n        this.createMode = false;\n    }\n\n    enableEditMode(saving: Saving): void {\n        this.editMode = true;\n        this.savingToUpdate = { ...saving };\n    }\n\n    disableEditMode(): void {\n        this.editMode = false;\n        this.savingToUpdate = null;\n    }\n    \n    enableDeleteMode(saving: Saving): void {\n        this.deleteMode = true;\n        this.savingToDelete = saving;\n    }\n\n    disableDeleteMode(): void {\n        this.deleteMode = false;\n        this.savingToDelete = null;\n    }\n\n    ngOnInit(): void {\n        this.getSavings();\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
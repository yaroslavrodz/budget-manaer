{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../shared/pipes/app-date.pipe\";\nfunction OperationListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function OperationListComponent_tr_16_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const operation_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.update(operation_r1));\n    });\n    i0.ɵɵtext(14, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function OperationListComponent_tr_16_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const operation_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.delete(operation_r1));\n    });\n    i0.ɵɵtext(17, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const operation_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(operation_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(operation_r1.type === \"Incoming\" ? operation_r1.amount : -operation_r1.amount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(operation_r1.category.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(operation_r1.saving.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 5, operation_r1.createdAt));\n  }\n}\nexport class OperationListComponent {\n  constructor() {\n    this.operations = [];\n    this.operationToEdit = new EventEmitter();\n    this.operationToDelete = new EventEmitter();\n  }\n  update(operation) {\n    this.operationToEdit.emit(operation);\n  }\n  delete(operation) {\n    this.operationToDelete.emit(operation);\n  }\n}\nOperationListComponent.ɵfac = function OperationListComponent_Factory(t) {\n  return new (t || OperationListComponent)();\n};\nOperationListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OperationListComponent,\n  selectors: [[\"app-operation-list\"]],\n  inputs: {\n    operations: \"operations\"\n  },\n  outputs: {\n    operationToEdit: \"operationToEdit\",\n    operationToDelete: \"operationToDelete\"\n  },\n  decls: 17,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"dark\", 3, \"click\"]],\n  template: function OperationListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"tr\")(2, \"th\");\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"th\");\n      i0.ɵɵtext(5, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Saving\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Delete\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, OperationListComponent_tr_16_Template, 18, 7, \"tr\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.operations);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.AppDatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;;;;;;ICWlEC,0BAAyC;IACjCA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAA0E;IAAAA,iBAAK;IACnFA,0BAAI;IAAAA,YAA6B;IAAAA,iBAAK;IACtCA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,aAAgC;;IAAAA,iBAAK;IACzCA,2BAAI;IAGIA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAC3BA,uBACJ;IAAAA,iBAAS;IAEbA,2BAAI;IAGIA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAC3BA,yBACJ;IAAAA,iBAAS;;;;IAjBTA,eAAoB;IAApBA,uCAAoB;IACpBA,eAA0E;IAA1EA,mGAA0E;IAC1EA,eAA6B;IAA7BA,gDAA6B;IAC7BA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAgC;IAAhCA,mEAAgC;;;ADP5C,OAAM,MAAOC,sBAAsB;EAK/BC;IAJS,eAAU,GAAgB,EAAE;IAC3B,oBAAe,GAAG,IAAIH,YAAY,EAAa;IAC/C,sBAAiB,GAAG,IAAIA,YAAY,EAAa;EAE3C;EAEhBI,MAAM,CAACC,SAAoB;IACvB,IAAI,CAACC,eAAe,CAACC,IAAI,CAACF,SAAS,CAAC;EACxC;EAEAG,MAAM,CAACH,SAAoB;IACvB,IAAI,CAACI,iBAAiB,CAACF,IAAI,CAACF,SAAS,CAAC;EAC1C;;AAbSH,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAQ;EAAAC;IAAAC;EAAA;EAAAC;IAAAP;IAAAG;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCTnChB,6BAAO;MAEKA,oBAAI;MAAAA,iBAAK;MACbA,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,0BAAI;MAAAA,wBAAQ;MAAAA,iBAAK;MACjBA,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGnBA,wEAoBK;MACTA,iBAAQ;;;MArBsBA,gBAAa;MAAbA,wCAAa","names":["EventEmitter","i0","OperationListComponent","constructor","update","operation","operationToEdit","emit","delete","operationToDelete","selectors","inputs","operations","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\operations\\components\\operation-list\\operation-list.component.ts","C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\operations\\components\\operation-list\\operation-list.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Operation } from '../../interfaces/operation.interface';\n\n@Component({\n    selector: 'app-operation-list',\n    templateUrl: './operation-list.component.html',\n    styleUrls: ['./operation-list.component.scss']\n})\nexport class OperationListComponent {\n    @Input() operations: Operation[] = [];\n    @Output() operationToEdit = new EventEmitter<Operation>();\n    @Output() operationToDelete = new EventEmitter<Operation>();\n\n    constructor() { }\n\n    update(operation: Operation): void {\n        this.operationToEdit.emit(operation);\n    }\n\n    delete(operation: Operation): void {\n        this.operationToDelete.emit(operation);\n    }\n}","<table>\n    <tr>\n        <th>Name</th>\n        <th>Amount</th>\n        <th>Category</th>\n        <th>Saving</th>\n        <th>Date</th>\n        <th>Edit</th>\n        <th>Delete</th>\n    </tr>\n\n    <tr *ngFor=\"let operation of operations\">\n        <td>{{ operation.name }}</td>\n        <td>{{ operation.type === 'Incoming' ? operation.amount : -operation.amount }}</td>\n        <td>{{ operation.category.name }}</td>\n        <td>{{ operation.saving.name }}</td>\n        <td>{{ operation.createdAt | date }}</td>\n        <td>\n            <button\n                class=\"dark\"\n                (click)=\"update(operation)\">\n                Edit\n            </button>\n        </td>\n        <td>\n            <button\n                class=\"dark\"\n                (click)=\"delete(operation)\">\n                Delete\n            </button>\n        </td>\n    </tr>\n</table>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
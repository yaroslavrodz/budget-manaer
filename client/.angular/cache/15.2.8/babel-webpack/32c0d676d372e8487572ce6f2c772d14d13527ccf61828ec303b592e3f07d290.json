{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction UpdateCategoryModalComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateCategoryModalComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Only latin characters and numbers allowed\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateCategoryModalComponent_div_9_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Min length equals to 4 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateCategoryModalComponent_div_9_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Max length equals to 12 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateCategoryModalComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, UpdateCategoryModalComponent_div_9_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(2, UpdateCategoryModalComponent_div_9_div_2_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(3, UpdateCategoryModalComponent_div_9_div_3_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(4, UpdateCategoryModalComponent_div_9_div_4_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"maxlength\"]);\n  }\n}\nexport class UpdateCategoryModalComponent {\n  get name() {\n    return this.form.get('name');\n  }\n  constructor() {\n    this.categoryToUpdate = new EventEmitter();\n    this.close = new EventEmitter();\n    this.form = new FormGroup({\n      name: new FormControl('', Validators.compose([Validators.required, Validators.minLength(4), Validators.maxLength(12), Validators.pattern('^[a-zA-Z0-9]+$')]))\n    });\n  }\n  update() {\n    this.categoryToUpdate.emit({\n      id: this.category?.id,\n      userId: this.category?.userId,\n      ...this.form.value\n    });\n    this.close.emit();\n  }\n  cancel() {\n    this.close.emit();\n  }\n  ngOnInit() {\n    this.form.patchValue({\n      name: this.category?.name\n    });\n  }\n}\nUpdateCategoryModalComponent.ɵfac = function UpdateCategoryModalComponent_Factory(t) {\n  return new (t || UpdateCategoryModalComponent)();\n};\nUpdateCategoryModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateCategoryModalComponent,\n  selectors: [[\"app-update-category-modal\"]],\n  inputs: {\n    category: \"category\"\n  },\n  outputs: {\n    categoryToUpdate: \"categoryToUpdate\",\n    close: \"close\"\n  },\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"modal\"], [1, \"modal-content\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"], [1, \"error-message\"], [4, \"ngIf\"]],\n  template: function UpdateCategoryModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Update category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateCategoryModalComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n      i0.ɵɵtext(7, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵtemplate(9, UpdateCategoryModalComponent_div_9_Template, 5, 4, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵtext(11, \" Update \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function UpdateCategoryModalComponent_Template_button_click_12_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(13, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.name == null ? null : ctx.name.invalid) && (ctx.name == null ? null : ctx.name.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAgB,eAAe;AAI9E,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICa/CC,2BAAwC;IAAAA,wBAAQ;IAAAA,iBAAM;;;;;IACtDA,2BAAuC;IAAAA,yDAAyC;IAAAA,iBAAM;;;;;IACtFA,2BAAyC;IAAAA,iDAAiC;IAAAA,iBAAM;;;;;IAChFA,2BAAyC;IAAAA,kDAAkC;IAAAA,iBAAM;;;;;IAPrFA,8BAE0B;IAEtBA,mFAAsD;IACtDA,mFAAsF;IACtFA,mFAAgF;IAChFA,mFAAiF;IACrFA,iBAAM;;;;IAJIA,eAAgC;IAAhCA,sHAAgC;IAChCA,eAA+B;IAA/BA,qHAA+B;IAC/BA,eAAiC;IAAjCA,uHAAiC;IACjCA,eAAiC;IAAjCA,uHAAiC;;;ADT3D,OAAM,MAAOC,4BAA4B;EAcrC,IAAIC,IAAI;IAAK,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC;EAAE;EAE3CC;IAdU,qBAAgB,GAAG,IAAIT,YAAY,EAAkB;IACrD,UAAK,GAAG,IAAIA,YAAY,EAAQ;IAE1C,SAAI,GAAG,IAAIE,SAAS,CAAC;MACjBI,IAAI,EAAE,IAAIL,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACO,OAAO,CAAC,CACzCP,UAAU,CAACQ,QAAQ,EACnBR,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,EACvBT,UAAU,CAACU,SAAS,CAAC,EAAE,CAAC,EACxBV,UAAU,CAACW,OAAO,CAAC,gBAAgB,CAAC,CACvC,CAAC;KACL,CAAC;EAIc;EAEhBC,MAAM;IACF,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC;MACvBC,EAAE,EAAE,IAAI,CAACC,QAAQ,EAAED,EAAE;MACrBE,MAAM,EAAE,IAAI,CAACD,QAAQ,EAAEC,MAAM;MAC7B,GAAG,IAAI,CAACb,IAAI,CAACc;KACE,CAAC;IACpB,IAAI,CAACC,KAAK,CAACL,IAAI,EAAE;EACrB;EAEAM,MAAM;IACF,IAAI,CAACD,KAAK,CAACL,IAAI,EAAE;EACrB;EAEAO,QAAQ;IACJ,IAAI,CAACjB,IAAI,CAACkB,UAAU,CAAC;MACjBnB,IAAI,EAAE,IAAI,CAACa,QAAQ,EAAEb;KACxB,CAAC;EACN;;AAnCSD,4BAA4B;mBAA5BA,4BAA4B;AAAA;AAA5BA,4BAA4B;QAA5BA,4BAA4B;EAAAqB;EAAAC;IAAAR;EAAA;EAAAS;IAAAZ;IAAAM;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCXzC5B,8BAAmB;MAEPA,+BAAe;MAAAA,iBAAK;MAExBA,+BAA+C;MAAtBA;QAAA,OAAY6B,YAAQ;MAAA,EAAC;MAC1C7B,8BAAyB;MACdA,sBAAM;MAAAA,iBAAQ;MAErBA,2BAG2B;MAE3BA,6EAQM;MACVA,iBAAM;MAENA,kCAE8B;MAC1BA,yBACJ;MAAAA,iBAAS;MAETA,kCAA2B;MAAnBA;QAAA,OAAS6B,YAAQ;MAAA,EAAC;MAAC7B,uBAAM;MAAAA,iBAAS;;;MA1BxCA,eAAkB;MAAlBA,oCAAkB;MAUXA,eAAkC;MAAlCA,iHAAkC;MAYvCA,eAAyB;MAAzBA,2CAAyB","names":["EventEmitter","FormControl","FormGroup","Validators","i0","UpdateCategoryModalComponent","name","form","get","constructor","compose","required","minLength","maxLength","pattern","update","categoryToUpdate","emit","id","category","userId","value","close","cancel","ngOnInit","patchValue","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\categories\\components\\update-category-modal\\update-category-modal.component.ts","C:\\Users\\dh123\\OneDrive\\Рабочий стол\\Новая папка (8)\\client\\src\\app\\modules\\categories\\components\\update-category-modal\\update-category-modal.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\nimport { Category } from '../../interfaces/category.interface';\nimport { UpdateCategory } from '../../interfaces/update-category.interface';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-update-category-modal',\n    templateUrl: './update-category-modal.component.html',\n    styleUrls: ['./update-category-modal.component.scss']\n})\nexport class UpdateCategoryModalComponent implements OnInit {\n    @Input() category?: Category;\n    @Output() categoryToUpdate = new EventEmitter<UpdateCategory>();\n    @Output() close = new EventEmitter<void>();\n\n    form = new FormGroup({\n        name: new FormControl('', Validators.compose([\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(12),\n            Validators.pattern('^[a-zA-Z0-9]+$'),\n        ]))\n    });\n\n    get name() { return this.form.get('name'); }\n\n    constructor() { }\n\n    update() {\n        this.categoryToUpdate.emit({\n            id: this.category?.id,\n            userId: this.category?.userId,\n            ...this.form.value\n        } as UpdateCategory);\n        this.close.emit();\n    }\n\n    cancel() {\n        this.close.emit();\n    }\n\n    ngOnInit() {\n        this.form.patchValue({\n            name: this.category?.name\n        });\n    }\n}","<div class=\"modal\">\n    <div class=\"modal-content\">\n        <h2>Update category</h2>\n      \n        <form [formGroup]=\"form\" (ngSubmit)=\"update()\">\n            <div class=\"input-group\">\n                <label>Name: </label>\n                \n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\">\n\n                <div \n                    *ngIf=\"name?.invalid && name?.dirty\"\n                    class=\"error-message\">\n\n                    <div *ngIf=\"name?.errors?.['required']\">Required</div>\n                    <div *ngIf=\"name?.errors?.['pattern']\">Only latin characters and numbers allowed</div>\n                    <div *ngIf=\"name?.errors?.['minlength']\">Min length equals to 4 characters</div>\n                    <div *ngIf=\"name?.errors?.['maxlength']\">Max length equals to 12 characters</div>\n                </div>\n            </div>\n    \n            <button\n                type=\"submit\"\n                [disabled]=\"form.invalid\">\n                Update\n            </button>\n\n            <button (click)=\"cancel()\">Cancel</button>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}